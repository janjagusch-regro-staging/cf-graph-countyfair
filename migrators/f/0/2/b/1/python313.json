{
  "__migrator__": true,
  "args": [
    "migrator_ts: 1724712607\n__migrator:\n    commit_message: Rebuild for python 3.13\n    migration_number: 1\n    operation: key_add\n    primary_key: python\n    ordering:\n        python:\n            - 3.9.* *_cpython\n            - 3.10.* *_cpython\n            - 3.11.* *_cpython\n            - 3.12.* *_cpython\n            - 3.13.* *_cp313  # new entry\n    paused: false\n    longterm: true\n    pr_limit: 20\n    max_solver_attempts: 3  # this will make the bot retry \"not solvable\" stuff 12 times\n    exclude:\n        # this shouldn't attempt to modify the python feedstocks\n        - python\n        - pypy3.6\n        - pypy-meta\n        - cross-python\n        - python_abi\n        # see https://github.com/conda-forge/scipy-feedstock/pull/283\n        - scipy\n    exclude_pinned_pkgs: false\n    ignored_deps_per_node:\n        matplotlib:\n            - pyqt\n\npython:\n- 3.13.* *_cp313\n# additional entries to add for zip_keys\nis_python_min:\n- false\n",
    "python313"
  ],
  "class": "MigrationYaml",
  "kwargs": {
    "automerge": false,
    "bump_number": 1,
    "check_solvable": true,
    "commit_message": "Rebuild for python 3.13",
    "conda_forge_yml_patches": null,
    "cycles": {
      "__set__": true,
      "elements": []
    },
    "effective_graph": {
      "__nx_digraph__": true,
      "node_link_data": {
        "directed": true,
        "graph": {
          "outputs_lut": {},
          "strong_exports": {
            "__set__": true,
            "elements": [
              "c_compiler_stub",
              "c_stdlib_stub",
              "cuda_compiler_stub",
              "cxx_compiler_stub",
              "fortran_compiler_stub"
            ]
          }
        },
        "links": [],
        "multigraph": false,
        "nodes": [
          {
            "id": "conda-forge-pinning",
            "payload": {
              "__lazy_json__": "node_attrs/conda-forge-pinning.json"
            }
          }
        ]
      }
    },
    "exclude": [
      "python",
      "pypy3.6",
      "pypy-meta",
      "cross-python",
      "python_abi",
      "scipy"
    ],
    "exclude_pinned_pkgs": false,
    "force_pr_after_solver_attempts": 10,
    "graph": {
      "__nx_digraph__": true,
      "node_link_data": {
        "directed": true,
        "graph": {
          "outputs_lut": {},
          "strong_exports": {
            "__set__": true,
            "elements": [
              "c_compiler_stub",
              "c_stdlib_stub",
              "cuda_compiler_stub",
              "cxx_compiler_stub",
              "fortran_compiler_stub"
            ]
          }
        },
        "links": [],
        "multigraph": false,
        "nodes": [
          {
            "id": "conda-forge-pinning",
            "payload": {
              "__lazy_json__": "node_attrs/conda-forge-pinning.json"
            }
          }
        ]
      }
    },
    "ignored_deps_per_node": {
      "matplotlib": [
        "pyqt"
      ]
    },
    "longterm": true,
    "max_solver_attempts": 3,
    "migration_number": 1,
    "operation": "key_add",
    "ordering": {
      "python": [
        "3.9.* *_cpython",
        "3.10.* *_cpython",
        "3.11.* *_cpython",
        "3.12.* *_cpython",
        "3.13.* *_cp313"
      ]
    },
    "package_names": {
      "__set__": true,
      "elements": []
    },
    "paused": false,
    "piggy_back_migrations": [
      {
        "__mini_migrator__": true,
        "args": [],
        "class": "CrossCompilationForARMAndPower",
        "kwargs": {},
        "name": "CrossCompilationForARMAndPower"
      },
      {
        "__mini_migrator__": true,
        "args": [],
        "class": "StdlibMigrator",
        "kwargs": {},
        "name": "StdlibMigrator"
      },
      {
        "__mini_migrator__": true,
        "args": [],
        "class": "CondaForgeYAMLCleanup",
        "kwargs": {},
        "name": "CondaForgeYAMLCleanup"
      },
      {
        "__mini_migrator__": true,
        "args": [],
        "class": "Jinja2VarsCleanup",
        "kwargs": {},
        "name": "Jinja2VarsCleanup"
      },
      {
        "__mini_migrator__": true,
        "args": [],
        "class": "DuplicateLinesCleanup",
        "kwargs": {},
        "name": "DuplicateLinesCleanup"
      },
      {
        "__mini_migrator__": true,
        "args": [],
        "class": "PipMigrator",
        "kwargs": {},
        "name": "PipMigrator"
      },
      {
        "__mini_migrator__": true,
        "args": [],
        "class": "LicenseMigrator",
        "kwargs": {},
        "name": "LicenseMigrator"
      },
      {
        "__mini_migrator__": true,
        "args": [],
        "class": "ExtraJinja2KeysCleanup",
        "kwargs": {},
        "name": "ExtraJinja2KeysCleanup"
      },
      {
        "__mini_migrator__": true,
        "args": [],
        "class": "NoCondaInspectMigrator",
        "kwargs": {},
        "name": "NoCondaInspectMigrator"
      },
      {
        "__mini_migrator__": true,
        "args": [],
        "class": "MPIPinRunAsBuildCleanup",
        "kwargs": {},
        "name": "MPIPinRunAsBuildCleanup"
      },
      {
        "__mini_migrator__": true,
        "args": [],
        "class": "PyPIOrgMigrator",
        "kwargs": {},
        "name": "PyPIOrgMigrator"
      },
      {
        "__mini_migrator__": true,
        "args": [],
        "class": "CombineV1ConditionsMigrator",
        "kwargs": {},
        "name": "CombineV1ConditionsMigrator"
      }
    ],
    "pr_limit": 2,
    "primary_key": "python",
    "top_level": {
      "__set__": true,
      "elements": []
    },
    "total_graph": null
  },
  "name": "python313"
}